@page "/SubDepartment"

<style>

    ::marker {
        content: close-quote;
        unicode-bidi: isolate;
        font-variant-numeric: tabular-nums;
        text-transform: none;
        text-indent: 0px !important;
        text-align: start !important;
        text-align-last: start !important;
    }
</style>
@inject IHttpService httpservice

@if (isDialogOpen == true)
{
    @if (selectsdept != null)
    {

        <CModal sdept="@selectsdept" title="Create New Sub Department" mstDatasChanged="@HandleAddsdept">
            <ChildContent1>
                <EditForm Model="@subdept" OnValidSubmit="submit">
                    <Fields>
                        <Field ColumnSize="ColumnSize.Is12">
                            <FieldLabel>Sub Department Name</FieldLabel>
                            <TextEdit @bind-Text="subdept.SubDpt_Name"></TextEdit>
                        </Field>
                    </Fields>
                    <Fields>
                        <Field Flex="Flex.JustifyContent.Center">
                            <Button Type="ButtonType.Submit" Color="Color.Primary" class="m-2" Disabled="@(busy)">@(isnew==true?"Submit":"Update")</Button>
                            <Button Type="ButtonType.Reset" Color="Color.Info" class="m-2">Reset</Button>
                            <Button Type="ButtonType.Button" Color="Color.Warning" class="m-2" Clicked="@HandleCanceled">Cancel</Button>
                        </Field>
                    </Fields>
                </EditForm>
            </ChildContent1>
        </CModal>
    }


}
else
{
    <div class="Container">
        <Heading Size="HeadingSize.Is3" Flex="Flex.JustifyContent.Center">Sub Department(s)</Heading>
        <Fields>
            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                <FieldLabel>Company</FieldLabel>
                <Select SelectedValue="tblPlant.Company_Id" SelectedValueChanged="@((string arg)=>{handlePlant(arg);})" SelectedValueExpression="@(()=>tblPlant.Company_Id)">
                    <SelectItem>--Select--</SelectItem>
                    @if (companies != null)
                    {
                        @foreach (TblCompanyMaster comp in companies)
                        {
                            <SelectItem Value="@comp.ID">@comp.Company_Name</SelectItem>
                        }
                    }
                </Select>

            </Field>
            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                <FieldLabel>Plant</FieldLabel>
                <Select SelectedValue="tblDept.Plant_Id" SelectedValueChanged="@((string arg)=>{handleDept(arg);})" SelectedValueExpression="@(()=>tblDept.Plant_Id)">
                    <SelectItem>--Select--</SelectItem>
                    @if (PlantList != null)
                    {
                        @foreach (TblPlantMaster pt in PlantList)
                        {
                            <SelectItem Value="@pt.ID">@pt.Plant_Name</SelectItem>
                        }
                    }
                </Select>
            </Field>
            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                <FieldLabel>Department</FieldLabel>
                <Select SelectedValue="subdept.Dept_Id" SelectedValueChanged="@((string arg)=>{handleSDept(arg);})" SelectedValueExpression="@(()=>subdept.Dept_Id)">
                    <SelectItem>--Select--</SelectItem>
                    @if (deptlist != null)
                    {
                        @foreach (TblDeptMaster sd in deptlist)
                        {
                            <SelectItem Value="@sd.Id">@sd.Dept_Name</SelectItem>
                        }
                    }
                </Select>
            </Field>
        </Fields>

        <Field ColumnSize="ColumnSize.Is5.OnDesktop.Is12.OnMobile">
            @ChildContent
            <Button class="m-2" style="margin-top:10px;background:#659abb;color:#000;" @onclick="@Addsdept" Disabled=@(tblPlant.Company_Id==null||tblDept.Plant_Id==null||subdept.Dept_Id==null)>Add</Button>
        </Field>
        @if (SubDeptList != null)
        {
            <Div Display="Display.Block.None.OnDesktop" >
            @foreach (var item in SubDeptList.Where(a=>(a.Status_F==0)))
            {
                <div id="accordion">
                    <div class="faq-container">
                        <div class="card w-100" style="border-top: 1px solid #FF6E31;">
                            <details class="d-flex m-2">
                                <summary style="margin-left:10px;"><i class="fa fa-city p-2" style="color:#243763;"></i>@item.SubDpt_Name</summary>
                                <p style="margin-left:15px;">
                                    <Field>
                                        <Dropdown>
                                            <Button Color="Color.Info">Action</Button>
                                            <DropdownToggle Color="Color.Primary" Split />
                                            <DropdownMenu>
                                                <DropdownItem Clicked="@(()=>HandleEditSubDept(item))">Edit</DropdownItem>
                                                <DropdownDivider />
                                                <DropdownItem Clicked="@(()=>handalDelSubDept(item))">Delete</DropdownItem>

                                            </DropdownMenu>
                                        </Dropdown>
                                      
                                    </Field>
                                </p>
                            </details>
                        </div>
                    </div>
                </div>
            }
            </Div>
        }
        <Div Display="Display.None.Block.OnDesktop">
            @if (SubDeptList != null)
            {
                <Table>
                    <TableHeader>

                        <TableRow>

                            <TableHeaderCell>SubDepartment Name</TableHeaderCell>
                           
                            <TableHeaderCell>Operation</TableHeaderCell>
                        </TableRow>
                    </TableHeader>
                    <TableBody>
                        @foreach (var item in SubDeptList.Where(a=>a.Status_F==0))
                        {
                            <TableRowGroup Title="@item.SubDpt_Name">
                                <TableRow>
                                    <TableRowCell>@item.SubDpt_Name</TableRowCell>
                                    


                                    <TableRowCell>
                                        <Dropdown>
                                            <Button Color="Color.Info">Action</Button>
                                            <DropdownToggle Color="Color.Primary" Split />
                                            <DropdownMenu>
                                                <DropdownItem Clicked="@(()=>HandleEditSubDept(item))">Edit</DropdownItem>
                                                <DropdownDivider />
                                                <DropdownItem Clicked="@(()=>handalDelSubDept(item))">Delete</DropdownItem>

                                            </DropdownMenu>
                                        </Dropdown>
                                    </TableRowCell>

                                </TableRow>

                            </TableRowGroup>
                        }
                    </TableBody>
                </Table>
            }

        </Div>
    </div>

}



@code {
    TblSubDeptMaster? selectsdept;
    TblSubDeptMaster subdept = new();
    string plantId;
    string deptId;
    string cmpId;
    bool isnew = true;
    bool busy = false; 
    [Parameter]
    public EventCallback<bool> mstdeptchanged { get; set; }
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    IEnumerable<TblSubDeptMaster> SubDeptList;
    IEnumerable<TblDeptMaster> deptlist;
    TblDeptMaster tblDept = new();
    IEnumerable<TblCompanyMaster> companies;
    IEnumerable<TblPlantMaster> PlantList;
    TblPlantMaster tblPlant = new();
    bool? isDialogOpen;
    async void submit()
    {
        if (isnew == true)
        {

            try
            {
                busy = true;
                subdept.Created_By = "Admin";
                subdept.Plant_Id = deptlist.First(a => (a.Plant_Id == plantId)).Plant_Id;
                subdept.Dept_Id = deptId;
                subdept.Company_Id = deptlist.First(a => (a.Plant_Id == subdept.Plant_Id)).Company_Id;
                var data = await httpservice.Post<string>("SubDeptMasters", subdept);
                if (data != null)
                {
                    await App.Current.MainPage.DisplayAlert("Message", data, "Ok");
                    busy = false;
                }
                else
                {
                    await App.Current.MainPage.DisplayAlert("Message", "Error", "Ok");
                }
                HandleCanceled();
                await OnInitializedAsync();
                subdept = new();
                StateHasChanged();

            }
            catch (Exception ex)
            {

            }
            StateHasChanged();
        }
        else
        {
            try
            {
                busy = true;
                subdept.Modified_By = "Admin";
                subdept.Plant_Id = deptlist.First(a => (a.Plant_Id == plantId)).Plant_Id;
                subdept.Dept_Id = deptlist.First(a => (a.Plant_Id == plantId)).Id.ToString();
                subdept.Company_Id = deptlist.First(a => (a.Plant_Id == subdept.Plant_Id)).Company_Id;
                subdept.Status_F = 0;
                var data = await httpservice.Post<string>("SubDeptMasters/UPD", subdept);
                if (data != null)
                {
                    await App.Current.MainPage.DisplayAlert("Message", data, "Ok");
                    busy = false;
                }
                else
                {
                    await App.Current.MainPage.DisplayAlert("Message", "Error", "Ok");
                }
                HandleCanceled();
                await OnInitializedAsync();
                subdept=new();
                isnew = true;
                StateHasChanged();

            }
            catch (Exception ex)
            {

            }
            StateHasChanged();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        companies = await httpservice.Get<List<TblCompanyMaster>>("CompanyMasters/ACT");

       // subdept.Dept_Id = deptId;
        //SubDeptList = (await httpservice.Get<List<TblSubDeptMaster>>("SubDeptMasters/ACT")).Where(a => (a.Dept_Id == subdept.Dept_Id));
        StateHasChanged();
    }
    void HandleAddsdept()
    {
        selectsdept = null;
        isDialogOpen = null;
    }
    void Addsdept()
    {

        isDialogOpen = true;
        selectsdept = new TblSubDeptMaster();
        selectsdept.Dept_Id = deptId;
        subdept.Dept_Id = selectsdept.Dept_Id;

    }
    void HandleCanceled()
    {
        selectsdept = null;
        isDialogOpen = false;
        subdept = new();
        isnew = true;
    }
    void HandleEditSubDept(TblSubDeptMaster item)
    {
        isDialogOpen = true;
        selectsdept = item;
        subdept = selectsdept;
        isnew = false;
    }
    async void handalDelSubDept(TblSubDeptMaster item)
    {
        item.Status_F = 1;
        var result = await httpservice.Post<string>("SubDeptMasters/UPD", item);

        if (result != null)
        {
            await App.Current.MainPage.DisplayAlert("Message", "Subdepartment Deleted Successfully", "Ok");
        }
        else
        {

            await App.Current.MainPage.DisplayAlert("Message", "Error", "Ok");

        }
        isnew = true;
        StateHasChanged();
       await OnInitializedAsync();
    }
    
    async void handlePlant(string val)
    {
        tblPlant.Company_Id = val;
        PlantList = (await httpservice.Get<List<TblPlantMaster>>("PlantMasters/ACT")).Where(a => (a.Company_Id == tblPlant.Company_Id));
        cmpId = tblPlant.Company_Id;
        StateHasChanged();
    }
    async void handleDept(string val)
    {
        tblDept.Plant_Id = val;
        deptlist = (await httpservice.Get<List<TblDeptMaster>>("DeptMasters/ACT")).Where(a => (a.Plant_Id == tblDept.Plant_Id));
        plantId = tblDept.Plant_Id;
        StateHasChanged();
    }
    async void handleSDept(string val)
    {
        subdept.Dept_Id = val;
        SubDeptList = (await httpservice.Get<List<TblSubDeptMaster>>("SubDeptMasters/ACT")).Where(a => (a.Dept_Id == subdept.Dept_Id));
        deptId = subdept.Dept_Id;
        StateHasChanged();
    }
    //void back()
    //{
    //    selectsdept = null;
    //    DispsData = false;
    //}
    
}
