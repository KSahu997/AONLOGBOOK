@page "/Calculator"
@inject IHttpService httpservices;


<Button Color="Color.Primary" Clicked="@ShowModal">Show Modal</Button>
<EditForm Model="@Calc">
<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Formula Creation</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Tag</FieldLabel>
                    <Select TValue="string" @bind-SelectedValue="@calcItem.Tag">
                    
                        <SelectItem></SelectItem>
                        @if(Tags!=null)
                        {
                             @foreach(TblTagMaster tags in Tags)
                            {

                                <SelectItem Value="@tags.Tag_Name"> <Badge Color="Color.Warning">@tags.Tag_Name</Badge></SelectItem>
                              
                            }
                        }
                    </Select>
               
            </Field>
            <Field>
                <FieldLabel>Operators</FieldLabel>
                <Badge Color="Color.Primary">
                        <Select TValue="string" @bind-SelectedValue="@calcItem.Operator">
                            <SelectItem></SelectItem>
                            <SelectItem Value="@("+")">+</SelectItem>
                            <SelectItem Value="@("-")">-</SelectItem>
                            <SelectItem Value="@("*")">*</SelectItem>
                            <SelectItem Value="@("/")">/</SelectItem>
                            <SelectItem Value="@("%")">%</SelectItem>
                            <SelectItem Value="@("(")">(</SelectItem>
                            <SelectItem Value="@(")")">)</SelectItem>
                            <SelectItem Value="@(".")">.</SelectItem>
                        </Select>
                </Badge>
            </Field>
            <Field>
                <FieldLabel>Numbers</FieldLabel>
                    <TextEdit Role="TextRole.Text" @bind-Text="@calcItem.Number"></TextEdit>
            </Field>
            <Field>
                    <Button Type="ButtonType.Button" Color="Color.Info" Clicked="@(()=>HandleAdd())">Add</Button>
            </Field>
            <Field>
                <FieldLabel>Formula</FieldLabel>
                    <TextEdit Role="TextRole.Text" @bind-Text="Calc.formula"></TextEdit>
                </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
            <Button Color="Color.Primary" Clicked="@HideModal">Save Changes</Button>
        </ModalFooter>
    </ModalContent>
</Modal>
</EditForm>
@code {
        [Parameter]
        public Modal modalRef{ get; set; }
        [Parameter]
        public EventCallback<List<string>> mstCalc { get; set; }
        [Parameter]
        public RenderFragment ChildContent { get; set; }
        IEnumerable<TblTagMaster> Tags;
        Calculator Calc = new();
        CalcItem calcItem = new();
        IEnumerable<Calculator> cal;
        string formula { get; set; }
        string tagitem { get; set; }
        string[] strArray = null;
        private Task ShowModal()
        {
            return modalRef.Show();
        }

        async private Task HideModal()
        {
            // modalRef.Hide();


        }
    protected override async Task OnInitializedAsync()
    {

        Tags = await httpservices.Get<List<TblTagMaster>>("TagMasters");
        StateHasChanged();
    }
    async void HandleAdd()
    {

        Calc.formula += calcItem.Tag+""+calcItem.Operator+""+calcItem.Number+"";
        strArray = (Calc.formula).Split(" ");
        calcItem.Tag = string.Empty;
        calcItem.Operator = string.Empty;
        calcItem.Number = string.Empty;
        StateHasChanged();
        for (int i = 0; i < strArray.Length; i++)
        {
            for (int j = i + 1; j < strArray.Length; j++)
            {
                if (strArray[j] == strArray[i])
                {
                    await App.Current.MainPage.DisplayAlert("Message", "Error", "OK");
                    strArray = strArray.Skip(j).ToArray();
                    Calc.formula = string.Join("", strArray);

                }
                else
                {
                    Calc.formula += calcItem.Tag + "" + calcItem.Operator + "" + calcItem.Number + "";
                   
                }
               
                }
           
        }
    }
}
