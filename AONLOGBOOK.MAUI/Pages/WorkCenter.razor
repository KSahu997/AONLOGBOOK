@page "/WorkCenter"

@inject IHttpService httpservices
@using System.Data;


<Div class="container" Padding="Padding.Is3">

	<Field>
		<Field ColumnSize="ColumnSize.Is3.OnDesktop.Is12.OnMobile">
			<Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">Work Center</Heading>
		</Field>
	</Field>
	<Card Padding="Padding.Is3" Margin="Margin.Is2">
		<EditForm Model="@workcenter" OnValidSubmit="submit">
			<Field>
				<Field ColumnSize="ColumnSize.Is3.OnDesktop.Is12.OnMobile">
					<FieldLabel>Work Center Name</FieldLabel>
					<TextEdit @bind-Text="workcenter.WorkCenter_Name"></TextEdit>
				</Field>
				<Field ColumnSize="ColumnSize.Is3.OnDesktop.Is12.OnMobile">
					<Button Type="ButtonType.Submit" Color="Color.Success" Margin="Margin.Is3" style="margin-top:10px">@(isNew ? "Submit" : "Update")</Button>
				</Field>
			</Field>
		</EditForm>
	</Card>
	<Table Hoverable Bordered>
		<TableHeader ThemeContrast="ThemeContrast.None" Background="Background.Secondary" TextColor="TextColor.White">
			<TableRow>
				<TableHeaderCell>SR_No</TableHeaderCell>
				<TableHeaderCell>WorkCenter_Name</TableHeaderCell>
				<TableHeaderCell>Action</TableHeaderCell>
			</TableRow>
		</TableHeader>
		<TableBody>
			@if (workcentermst != null )
			{

			@foreach (TblWorkCenterMaster item in workcentermst){
				<TableRow>
					
						<TableRowCell>@(workcentermst.ToList().IndexOf(item)+1)</TableRowCell>
						<TableRowCell>@item.WorkCenter_Name</TableRowCell>
						<TableRowCell>
							<Button Background="Background.Info" Clicked="@(()=>{Edit(item);})">EDIT</Button>
							<Button Background="Background.Danger"  Clicked="@(()=>{Delete(item);})">@(item.Del_Flag!=1?"Delete":"UnDelete")</Button>
						</TableRowCell>
								
				</TableRow>
				}
			}
		</TableBody>
	</Table>
</Div>

@code {
	TblWorkCenterMaster workcenter = new();

	IEnumerable<TblWorkCenterMaster>?workcentermst;
	DataTable workcenters;
	IEnumerable<TblCompanyMaster> companymst;
	IEnumerable<TblPlantMaster> plantmst;
	bool isNew = true;
	protected override async Task OnInitializedAsync()
	{
		companymst = await httpservices.Get<List<TblCompanyMaster>>("CompanyMasters");
		plantmst = await httpservices.Get<List<TblPlantMaster>>("PlantMasters");
		workcentermst = (await httpservices.Get<List<TblWorkCenterMaster>>("WorkCenterMasters/GetList"));

		StateHasChanged();
	}

	async void Edit(TblWorkCenterMaster item)
	{
		workcenter = item;
		isNew = false;
		StateHasChanged();
	}

	async void Delete(TblWorkCenterMaster item)
	{
		try
		{

			item.Del_Flag = item.Del_Flag==0?1:0;
			var delt = await httpservices.Post<string>("WorkCenterMasters/delete", item);
			if (delt != null)
			{
				await App.Current.MainPage.DisplayAlert("Message", delt, "ok");
				isNew = true;
				StateHasChanged();
			}
			else
			{
				await App.Current.MainPage.DisplayAlert("Message", "Error", "ok");
			}
		}
		catch (Exception ex)
		{
			item.Del_Flag = 0;

		}

	}
	async void submit()
	{

		if (isNew == true)
		{

			try
			{
				workcenter.Company_ID = companymst.First().ID.ToString();
				workcenter.Plant_ID = plantmst.First(a => (a.Company_Id == workcenter.Company_ID)).ID.ToString();
				workcenter.Inserted_By = "Admin";
				var result = await httpservices.Post<string>("WorkCenterMasters", workcenter);

				if (result != null)
				{
					await App.Current.MainPage.DisplayAlert("Message", result, "Ok");
					StateHasChanged();

				}
				else
				{
					await App.Current.MainPage.DisplayAlert("Failed", "error", "Ok");
				}

			}

			catch (Exception ex)
			{

			}
			OnInitializedAsync();
			workcenter = new();
		}
		else
		{
			try
			{
				workcenter.Company_ID = companymst.First().ID.ToString();
				workcenter.Plant_ID = plantmst.First(a => (a.Company_Id == workcenter.Company_ID)).ID.ToString();
				workcenter.Inserted_By = "Admin";
				var result = await httpservices.Post<string>("WorkCenterMasters/update", workcenter);

				if (result != null)
				{
					await App.Current.MainPage.DisplayAlert("Message", result, "Ok");
					StateHasChanged();

				}
				else
				{
					await App.Current.MainPage.DisplayAlert("Failed", "error", "Ok");
				}
			}
			catch(Exception ex)
			{
				
			}
			OnInitializedAsync();
			workcenter = new();
		}
	}
}
