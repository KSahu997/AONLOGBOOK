@page "/LookupCreation"
@inject IHttpService httpservice;

<Div class="container" Padding="Padding.Is3">
    
   <Fields>
       <Field ColumnSize="ColumnSize.Is3.OnDesktop.Is12.OnMobile">
           <h4 class="mb-4">Lookup Creation</h4>
        </Field>
           <Field ColumnSize="ColumnSize.Is2.OnDesktop.Is12.OnMobile">
               </Field>
   </Fields>
    <Card Padding="Padding.Is2" Margin="Margin.Is2">
        <EditForm Model="@tblLookup" OnValidSubmit="submit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
                <Fields>
                    <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                        <FieldLabel>Lookup Name</FieldLabel>
                        <TextEdit @bind-Text="tblLookup.Name"></TextEdit>
                    </Field>
                    <Field ColumnSize="ColumnSize.Is12.OnDesktop.Is12.OnMobile">
                        <Button Type="ButtonType.Submit" Color="Color.Info" Disabled="tblLookup.Name == null">Submit</Button>
                    </Field>
                </Fields>
        </EditForm>
    </Card>

    <Table Hoverable Bordered>
        <TableHeader ThemeContrast="ThemeContrast.None" Background="Background.Secondary" TextColor="TextColor.White">
            <TableRow>

                <TableHeaderCell>Name</TableHeaderCell>
                <TableHeaderCell>Action</TableHeaderCell>
            </TableRow>
        </TableHeader>
        <TableBody>

            @if (lookuplist != null)
            {
                @foreach (var item in lookuplist.Where(a=>(a.DelFlag == 0)))
                {
                    <TableRow>
                        <TableRowCell>@item.Name</TableRowCell>
                        <TableRowCell>
                            <Button Color="Color.Warning" Margin="Margin.Is2" Clicked="@(()=>{Editlookup(item);})"><BarIcon IconName="IconName.Edit"></BarIcon></Button>
                            <Button Color="Color.Danger" Margin="Margin.Is2" Clicked="@(()=>{DelLookup(item);})"><BarIcon IconName="IconName.Delete"></BarIcon></Button>
@*                            <Button Color="Color.Primary" Margin="Margin.Is2" Clicked="@(()=>{AddParam(item);})">Add Parameter</Button>
*@                        </TableRowCell>
                    </TableRow>

                }
            }


        </TableBody>
    </Table>
</Div>

@code {
    TblLookup tblLookup = new();
    IEnumerable<TblDeptMaster> Deptlist;
    IEnumerable<TblLookup> lookuplist;
    bool? isedit = true;
    protected override async Task OnInitializedAsync()
    {
        Deptlist = await httpservice.Get<List<TblDeptMaster>>("DeptMasters");
        lookuplist = await httpservice.Get<List<TblLookup>>("Lookups");

    }
    async void submit()
    {
        if(isedit == true){
            try
            {
                tblLookup.CreatedBy = "Admin";
                tblLookup.CompanyId = Deptlist.First().Company_Id.ToString();
                tblLookup.PlantId = Deptlist.First().Plant_Id.ToString();
                var data = await httpservice.Post<string>("Lookups", tblLookup);
                if (data != null)
                {
                    await App.Current.MainPage.DisplayAlert("Message", "Data Successfully Inserted", "ok");
                }
                else
                {
                    await App.Current.MainPage.DisplayAlert("Message", "Error", "ok");
                }
            }
            catch (Exception Ex)
            {

            }
            await OnInitializedAsync();
            tblLookup.Name = null;
            StateHasChanged();
        }
        else
        {
            try{
                tblLookup.CreatedBy = "Admin";
                tblLookup.CompanyId = Deptlist.First().Company_Id.ToString();
                tblLookup.PlantId = Deptlist.First().Plant_Id.ToString();
                var edata = await httpservice.Post<string>("Lookups/upd", tblLookup);
                if (edata != null)
                {
                    await App.Current.MainPage.DisplayAlert("Message", "Data Successfully Updated", "ok");
                }
                else
                {
                    await App.Current.MainPage.DisplayAlert("Message", "Error", "ok");
                }
            }
            catch (Exception Ex)
            {

            }
            await OnInitializedAsync();
            tblLookup.Name = null;
            StateHasChanged();
        }

    }
    async void Editlookup(TblLookup item)
    {
        tblLookup = item;
        isedit = false;
    }    
    async void DelLookup(TblLookup item)
    {
        try
        {

            item.DelFlag = 1;
            var deldata = await httpservice.Post<string>("Lookups/del", item);
            if (deldata != null)
            {
                await App.Current.MainPage.DisplayAlert("Message", "Data Successfully Deleted", "ok");
                isedit = true;
                StateHasChanged();
            }
            else
            {
                await App.Current.MainPage.DisplayAlert("Message", "Error", "ok");
            }
        }
        catch (Exception ex)
        {
            item.DelFlag = 0;

        }
    }
    async void AddParam(TblLookup item)
    {
        
    }

}
