@page "/Logbook"
@inject IHttpService httpservice
@using AONLOGBOOK.SHARED.Models;
<style>
  

    input[type=number] {
        -moz-appearance: textfield;
    }

</style>

@if(DispData==true)
{
    @if (logmst != null)
    {
        <LogDetailSchema log="@logmst" mstlogChanged="@HandleDataSaved">
            <ChildContent>
                    <Button Color="Color.Secondary" Type="ButtonType.Button" @onclick="@back" Style="margin:2px;"><BarIcon IconName="IconName.Backward"></BarIcon></Button> 
            </ChildContent>
                
       </LogDetailSchema>
       
    }

}
else if (isDialogOpen == true)
{
    @if (logmst != null)
    {
        @if (logmst.LogbookId != null)
        {

        }
        <CModal Lmst="@logmst" title="Create New LogBook" mstDatasChanged="@HandleAddlogbook">
            <ChildContent1>
                <EditForm Model="@logbookmst" OnValidSubmit="save">
                    <Fields>
                        <Field ColumnSize="ColumnSize.Is12">
                            <FieldLabel>LogBook Name</FieldLabel>
                            <TextEdit @bind-Text="logbookmst.LogbookName"></TextEdit>
                        </Field>
                    </Fields>
                    <Fields>
                        <Field Flex="Flex.JustifyContent.Center">
                            <Button Type="ButtonType.Submit" Color="Color.Primary" class="m-2">Submit</Button>
                            <Button Type="ButtonType.Reset" Color="Color.Info" class="m-2">Reset</Button>
                            <Button Type="ButtonType.Button" Color="Color.Warning" class="m-2" Clicked="@HandleCancel">Cancel</Button>
                        </Field>
                    </Fields>
                </EditForm>
            </ChildContent1>
        </CModal>
    }
}

else
{
    <div class="container">
   <Heading Flex="Flex.JustifyContent.Center" Size="HeadingSize.Is4">LogBook Creation</Heading>
    <Divider DividerType="DividerType.Dashed" />
    
        
                <Fields>
                    <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                        <FieldLabel>Department</FieldLabel>
                <Select SelectedValue="tblSdept.Dept_Id" SelectedValueExpression="@(()=>tblSdept.Dept_Id)" SelectedValueChanged="@((string args)=>{handleSubDept(args);})">
                             <SelectItem>--Select--</SelectItem>
                     @if (deptList != null)
                            {
                                @foreach (TblDeptMaster dept in deptList)
                                {
                                    <SelectItem Value="@dept.Id">@dept.Dept_Name</SelectItem>
                                }
                            }
                </Select>  
                    </Field>
                    <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                        <FieldLabel>Sub Department</FieldLabel>
                <Select SelectedValue="logbookmst.SubDepartment" SelectedValueExpression="@(()=>logbookmst.SubDepartment)" SelectedValueChanged="@((string args)=>{handlelogbook(args);})">
                            <SelectItem>--Select--</SelectItem>
                            @if (SdeptList != null)
                            {
                                @foreach (TblSubDeptMaster sdept in SdeptList)
                                {
                            <SelectItem Value="@sdept.Id">@sdept.SubDpt_Name</SelectItem>
                                }
                            }
                        </Select> 
                    </Field>
                  
                </Fields>
        <Field ColumnSize="ColumnSize.Is5.OnDesktop.Is12.OnMobile">
            @ChildContent
            <Button class="m-2" style="margin-top:10px;background:#659abb;color:#000;" @onclick="@Addlogbook" Disabled="@(tblSdept.Dept_Id==null || logbookmst.SubDepartment==null)" >Add</Button>
        </Field>

        @if (logbookMasters != null)
        {
           <Div Display="Display.Block.None.OnDesktop" >
            @foreach (var item in logbookMasters.Where(a=>(a.Del_Flag==0)))
            {
                <div id="accordion">
                    <div class="faq-container">
                        <div class="card w-100" style="border-top: 1px solid #FF6E31;">
                            <details class="d-flex m-2">
                                <summary style="margin-left:10px;"><i class="fa fa-city p-2" style="color:#243763;"></i>@item.LogbookName</summary>
                                <p style="margin-left:15px;">
                                    <Field>
                                        <Dropdown>
                                            <Button Color="Color.Info">Action</Button>
                                            <DropdownToggle Color="Color.Primary" Split />
                                            <DropdownMenu>
                                                <DropdownItem Clicked="@(()=>HandleEditlogbook(item))">Edit</DropdownItem>
                                                <DropdownDivider />
                                                <DropdownItem Clicked="@(()=>handalDelLogbook(item))">Delete</DropdownItem>
                                                <DropdownDivider/>
                                                <DropdownItem Clicked="@(()=>handlelogbookdetail(item))">Add LogbookDetail</DropdownItem>
                                            </DropdownMenu>
                                        </Dropdown>
                                        
                                    

                                    </Field>
                                </p>
                            </details>
                        </div>
                    </div>
                </div>
            }
           </Div>
        }

        <Div Display="Display.None.Block.OnDesktop">
            @if (logbookMasters != null)
            {
                <Table>
                    <TableHeader Style="background-image: linear-gradient(181deg, #3e52af, transparent);">

                        <TableRow>

                            <TableHeaderCell>Logbook Name</TableHeaderCell>

                            <TableHeaderCell>Operation</TableHeaderCell>
                        </TableRow>
                    </TableHeader>
                    <TableBody>
                        @foreach (var item in logbookMasters.Where(a=>(a.Del_Flag==0)))
                        {
                            <TableRowGroup Title="@item.LogbookName">
                                <TableRow>
                                    <TableRowCell>@item.LogbookName</TableRowCell>

                                    <TableRowCell>
                                        <Dropdown>
                                            <Button Color="Color.Info">Action</Button>
                                            <DropdownToggle Color="Color.Primary" Split />
                                            <DropdownMenu>
                                                <DropdownItem Clicked="@(()=>HandleEditlogbook(item))">Edit</DropdownItem>
                                                <DropdownDivider />
                                                <DropdownItem Clicked="@(()=>handalDelLogbook(item))">Delete</DropdownItem>
                                                <DropdownDivider />
                                                <DropdownItem Clicked="@(()=>handlelogbookdetail(item))">Add LogbookDetail</DropdownItem>
                                            </DropdownMenu>
                                        </Dropdown>
                                    </TableRowCell>

                                </TableRow>

                            </TableRowGroup>
                        }
                    </TableBody>
                </Table>
            }

        </Div>

   </div>
  
}
@code {
    IEnumerable<TblLogbookMaster> logbookMasters;
    TblLogbookMaster logbookmst = new();
   // TblLogBookDataTable selectedLogbook;
    string sdept;
    string cmpId;
    string plantid;
    string Deptid;
    string log;

    [Parameter]
    public RenderFragment ChildContent { get; set; }
    //TblLogBookDataTable logbook = new();
    //IEnumerable<TblLogBookDataTable> LogDataList;
    IEnumerable<TblCompanyMaster> companyList;
    IEnumerable<TblPlantMaster> plantList;
    IEnumerable<TblDeptMaster> deptList;
    IEnumerable<TblSubDeptMaster> SdeptList;
    TblSubDeptMaster tblSdept = new();
    TblDeptMaster tblDept = new();
    TblPlantMaster tblPlant = new();
    bool? isDialogOpen;
    bool? DispData;
    bool isnew = true;
    bool? Displayform { get; set; } = false;
    TblLogbookMaster? logmst;
    public EventCallback<bool> mstDataschanged { get; set; }
    protected override async Task OnInitializedAsync()
    {
        deptList = await httpservice.Get<List<TblDeptMaster>>("DeptMasters/ACT");
        //  logbookMasters = await httpservice.Get<List<LogbookMaster>>("logbookMasters");
        StateHasChanged();

    }
    async void handleSubDept(string value)
    {

        tblSdept.Dept_Id = value;
        SdeptList = (await httpservice.Get<List<TblSubDeptMaster>>("SubDeptMasters/ACT")).Where(a=>(a.Dept_Id==tblSdept.Dept_Id));
        Deptid =  tblSdept.Dept_Id ;
        StateHasChanged();
    }
    async void handlelogbook(string value)
    {
        logbookmst.SubDepartment = value;
        logbookMasters = (await httpservice.Get<List<TblLogbookMaster>>("LogbookMasters/ACT")).Where(a=>(a.SubDepartment==logbookmst.SubDepartment));
        log = logbookmst.SubDepartment;
        StateHasChanged();
    }
    async void Addlogbook()
    {
        logmst = new TblLogbookMaster();
        isDialogOpen = true;
        logmst.SubDepartment = log;
        StateHasChanged();
    }
    void HandleAddlogbook()
    {
        logmst = null;
        isDialogOpen = null;
    }
    void HandleEditlogbook(TblLogbookMaster item)
    {
        isDialogOpen = true;
        logmst=item;
        logbookmst = logmst;
        isnew = false;

    }
    void handlelogbookdetail(TblLogbookMaster item)
    {
        logmst = item;
        DispData = true;
    }

    async void save()
    {
        if(isnew==true)
        {
            try
            {
                // logbookmst.PlantCode =
                logbookmst.Department = tblSdept.Dept_Id;
                logbookmst.PlantCode = SdeptList.First(a=>(a.Dept_Id==logbookmst.Department)).Plant_Id;
                logbookmst.Company_Id =SdeptList.First(a=>(a.Plant_Id==logbookmst.PlantCode)).Company_Id;

                var data = await httpservice.Post<string>("LogbookMasters", logbookmst);
                if (data != null)
                {
                    await App.Current.MainPage.DisplayAlert("Message", data, "Ok");

                }
                else
                {
                    await App.Current.MainPage.DisplayAlert("Message", "Error", "Ok");
                }
                HandleCancel();
                await OnInitializedAsync();
                logbookMasters = (await httpservice.Get<List<TblLogbookMaster>>("LogbookMasters/ACT")).Where(a => (a.SubDepartment == logbookmst.SubDepartment));
                logbookmst = new();
                logmst = new();
                StateHasChanged();
            }
            catch (Exception ex)
            {

            }
        }
        else
        {
            try
            {
                // logbookmst.PlantCode =
                logbookmst.Department = tblSdept.Dept_Id;
                logbookmst.PlantCode = SdeptList.First(a => (a.Dept_Id == logbookmst.Department)).Plant_Id;
                logbookmst.Company_Id = SdeptList.First(a => (a.Plant_Id == logbookmst.PlantCode)).Company_Id;
                logbookmst.Del_Flag = 0;

                var data = await httpservice.Post<string>("LogbookMasters/UPD", logbookmst);
                if (data != null)
                {
                    await App.Current.MainPage.DisplayAlert("Message", data, "Ok");

                }
                else
                {
                    await App.Current.MainPage.DisplayAlert("Message", "Error", "Ok");
                }
                HandleCancel();
                await OnInitializedAsync();
                logbookMasters = (await httpservice.Get<List<TblLogbookMaster>>("LogbookMasters/ACT")).Where(a => (a.SubDepartment == logbookmst.SubDepartment));
                logmst = new();
                logbookmst = new();
                StateHasChanged();
                isnew = true;
            }
            catch (Exception ex)
            {

            }
        }


    }

    async void handalDelLogbook(TblLogbookMaster item)
    {
        item.Del_Flag = 1;
        var result = await httpservice.Post<string>("LogbookMasters/UPD", item);

        if (result != null)
        {
            await App.Current.MainPage.DisplayAlert("Message", "Logbook Deleted Successfully", "Ok");
            StateHasChanged();
        }
        else
        {

            await App.Current.MainPage.DisplayAlert("Message", "Error", "Ok");

        }
        isnew = true;
        logmst = new();
        await OnInitializedAsync();
        logbookMasters = (await httpservice.Get<List<TblLogbookMaster>>("LogbookMasters/ACT")).Where(a => (a.SubDepartment == logbookmst.SubDepartment));
    }

    void HandleCancel()
    {
        logmst = null;
        isDialogOpen = false;
        logbookmst = new();
    }
    void HandleDataSaved()
    {

    }
    void back()
    {
        DispData = false;
        isDialogOpen = false;
        logmst = null;
    }
    
}