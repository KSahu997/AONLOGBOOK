@page "/Lookup"
@using AONLOGBOOK.SHARED.CModels;
@inject IHttpService httpservice;

<Div class="container">
    <Field ColumnSize="ColumnSize.Is12.OnDesktop.Is12.OnMobile">
        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">Lookup(s)</Heading>
        <Divider DividerType="DividerType.Dotted" />
    </Field>
    <Fields>
        <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile">
            <FieldLabel>Lookup</FieldLabel>
            <Select SelectedValue="@tblLookupValue.Lookup_ID" SelectedValueChanged="@((string arg)=>{handlelookup(arg);})" SelectedValueExpression="@(()=>tblLookupValue.Lookup_ID)">
                <SelectItem>--Select--</SelectItem>
                @if (lookuplist != null)
                {
                    @foreach (TblLookup lookup in lookuplist.Where(a => (a.Del_Flag != 1)))
                    {
                        <SelectItem Value="@lookup.ID">@lookup.Name</SelectItem>
                    }
                }
            </Select>
        </Field>
    </Fields>
    <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile">
        <Button Background="Background.Info" TextColor="TextColor.Light" @onclick="@Add" Margin="Margin.Is4" Disabled=@(tblLookupValue.Lookup_ID==null||string.IsNullOrEmpty(tblLookupValue.Lookup_ID))>Add</Button>
    </Field>
     @if (dynamicform.Count() > 0)
    {
       
    <Card>
     <CardBody>
                    <CardText>
                        <Field>
                            @foreach (Lookuplist le in dynamicform)
                            {
                               
                                    <FieldLabel>@le.label</FieldLabel>
                                     <TextEdit @bind-Text="@le.Value" Style="margin:auto;" InputMode="TextInputMode.Text"></TextEdit>    
                             }
                       
                            <Field Flex="Flex.JustifyContent.End.OnDesktop.JustifyContent.Center.OnMobile">
                                <Button Clicked="@submit" Style="justify-content:center; margin:15px;background:#659abb;color:#000;">Save</Button>
                            </Field>

                        </Field>

                    </CardText>

                </CardBody>
            </Card>
            }
</Div>



@code {

    IEnumerable<TblLookup> lookuplist;
    IEnumerable<TblLookupParam> paramlist;
    IEnumerable<TblDeptMaster> Deptlist;
    IEnumerable<TblLookupValue> tblLookupValues;
    TblLookupValue tblLookupValue = new();
    List<Lookuplist> dynamicform = new();
    lookupEleList lookupEle = new();
   
    protected override async Task OnInitializedAsync()
    {
        lookuplist = await httpservice.Get<List<TblLookup>>("LookupCreation/ACT");

    }

    async void Add()
    {
        try
        {
            dynamicform = new List<Lookuplist>();
            paramlist = (await httpservice.Get<List<TblLookupParam>>("LookupParams")).Where(a => (a.Lookup_ID == tblLookupValue.Lookup_ID));

            if (paramlist.Count() == 0)
            {
                await App.Current.MainPage.DisplayAlert("Dynamic Form", "Sorry there is no elements in the form", "OK");
            }
            else
            {
                paramlist.ToList().ForEach(a =>
             {
                 dynamicform.Add(new Lookuplist { label = a.Param });
             });
            }
        }
        catch (Exception ex)
        {

        }
        StateHasChanged();

    }
    async void submit()
    {
        try
        {

            var a = dynamicform;
            a.ForEach(a =>
            {
                lookupElement lookupElement = new();
                lookupElement.paramName = a.label;
                lookupElement.paramValue = a.Value;
                lookupEle.Tbllookup.Add(lookupElement);
                });
               
                lookupEle.CreatedBy = "Admin";
                lookupEle.CompanyId = paramlist.First(a => (a.Lookup_ID == tblLookupValue.Lookup_ID)).Company_ID;
            lookupEle.PlantId = paramlist.First(a => (a.Lookup_ID == tblLookupValue.Lookup_ID)).Plant_ID;
            lookupEle.LookupId = tblLookupValue.Lookup_ID;
            lookupEle.NameValue = lookuplist.First(a => (a.ID.ToString() == tblLookupValue.Lookup_ID)).Name;

                var result = await httpservice.Post<string>("LookupValues", lookupEle);
                if (result != null)
                {
                    await App.Current.MainPage.DisplayAlert("Message", "Success", "ok");

                }
                else
                {
                    await App.Current.MainPage.DisplayAlert("Error", "Error", "ok");
                }
                lookupEle = new();
                dynamicform = new();
                StateHasChanged();
          
        }
        catch (Exception ex)
        {

        }
    }
    async void handlelookup(string value)
    {
        tblLookupValue.Lookup_ID = value;
        paramlist = (await httpservice.Get<List<TblLookupParam>>("LookupParams")).Where(a => (a.Lookup_ID == tblLookupValue.Lookup_ID));
        StateHasChanged();
    }
    void handleparam(string value)
    {
        
    }
}
