@page "/Plant"
@inject IHttpService httpservice
<style>
    
    ::marker {
        content: close-quote;
        unicode-bidi: isolate;
        font-variant-numeric: tabular-nums;
        text-transform: none;
        text-indent: 0px !important;
        text-align: start !important;
        text-align-last: start !important;
    }
</style>

@if (isDialogOpen == true)
{
    @if(selectedplant != null )
    {
      
        <CModal plant="@selectedplant" title="Create New Plant" mstDatasChanged="@HandleAddplant">
            <ChildContent1>
                <EditForm Model="@tblPlant" OnValidSubmit="submit">
                    <div class="row m-2">
                        <InputText @bind-Value="tblPlant.Company_Id" hidden></InputText>
                       @* <div class="form-floating mb-3">
                           
                            <InputText @bind-Value="tblPlant.PlantName" class="form-control" id="floatingInput" placeholder="Plant Name" typeof="text" required />
                            <label for="floatingInput">Plant Name</label>
                            
                        </div>*@
                        <Fields>
                            
                                <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                    <FieldLabel>Plant name</FieldLabel>
                                    <TextEdit @bind-Text="tblPlant.Plant_Name" Role="TextRole.Text"></TextEdit>
                                </Field>
                                <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                    <FieldLabel>Email</FieldLabel>
                                    <TextEdit @bind-Text="tblPlant.Email" Role="TextRole.Email"></TextEdit>
                                </Field>
                               <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                    <FieldLabel>Mobile</FieldLabel>
                                    <TextEdit @bind-Text="tblPlant.Phone_no" Role="TextRole.Telephone"></TextEdit>
                                </Field>
                                <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                    <FieldLabel>Address</FieldLabel>
                                    <TextEdit @bind-Text="tblPlant.Address" Role="TextRole.Text"></TextEdit>
                                </Field>
                                <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                    <FieldLabel>City</FieldLabel>
                                    <TextEdit @bind-Text="tblPlant.City" Role="TextRole.Text"></TextEdit>
                                </Field>
                                <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                    <FieldLabel>State</FieldLabel>
                                    <TextEdit @bind-Text="tblPlant.State" Role="TextRole.Text"></TextEdit>
                                </Field>
                               <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                <FieldLabel>Country</FieldLabel>
                                    <TextEdit @bind-Text="tblPlant.Country" Role="TextRole.Text"></TextEdit>
                                </Field>
                                <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                    <FieldLabel>PinCode</FieldLabel>
                                    <NumericEdit @bind-Value="tblPlant.PinCode" role="none"/>
                                </Field>
                           
                        </Fields>
                    </div>
                    <div class="row m-2">
                        <div class="col-md-12 d-flex mb-3 justify-content-center">
                            <Button Type=ButtonType.Submit Color="Color.Primary" class="m-2">@(isnew==true?"Submit":"Update")</Button>
                            <Button Type=ButtonType.Reset Color="Color.Info" class="m-2">Reset</Button>
                            <Button Type=ButtonType.Button Color="Color.Warning" class="m-2" onclick="@HandleCancel">Cancel</Button>

                        </div>

                    </div>
                </EditForm>
            </ChildContent1>
        </CModal>
    }
   

}
else
{
    <div class="Container">
      <div class="row" style=" margin: 20px;
        padding: 20px;
        border: 1px solid grey;
        border-radius: 10px;">
       
         <Field ColumnSize="ColumnSize.Is12.OnDesktop.Is12.OnMobile">
                <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">Plant List</Heading>
        </Field>
            
                <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile">
                    <FieldLabel>Company</FieldLabel>
                    <Select SelectedValue="tblPlant.Company_Id" SelectedValueChanged="@((string arg)=>{handlePlant(arg);})" SelectedValueExpression="@(()=>tblPlant.Company_Id)">
                        <SelectItem>--Select--</SelectItem>
                        @if (companies != null)
                        {
                            @foreach (TblCompanyMaster comp in companies)
                            {
                                <SelectItem Value="@comp.ID">@comp.Company_Name</SelectItem>
                            }
                        }
                    </Select>
                </Field>
                <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile" >
                <Button Background="Background.Info"  @onclick="@AddPlant" Margin="Margin.Is4" Disabled=@(tblPlant.Company_Id==null||string.IsNullOrEmpty(tblPlant.Company_Id))>Add</Button>
                </Field>
         
        </div>
   @if (PlantList != null)
  {         
       <Div Display="Display.Block.None.OnDesktop" >
                            @foreach (var item in PlantList.Where(a=>(a.Status_F==0)))
                            {
                                <div id="accordion">
                                    <div class="faq-container m-2 ">
                                        <div class="card w-100" style="border-top: 1px solid #FF6E31;">
                                      
                                            <details class="d-flex m-2">
                                                <summary style="margin-left:10px;"><i class="fa fa-city p-2" style="color:#243763;"></i>@item.Plant_Name</summary>
                                                <p style="margin-left:10px;">
                                                    <ListGroup>
                                                        <ListGroupItem><b>Email</b>   @item.Email</ListGroupItem>
                                                        <ListGroupItem> <b>City</b>  @item.City</ListGroupItem>
                                                        <ListGroupItem><b>Country</b>  @item.Country</ListGroupItem>
                                                        <ListGroupItem><b>State</b>  @item.State</ListGroupItem>
                                                        <ListGroupItem><b>Postal Code</b>  @item.PinCode</ListGroupItem>
                                                    </ListGroup>
                                                    <Field>
                                                    <Dropdown>
                                                        <Button Color="Color.Info">Action</Button>
                                                        <DropdownToggle Color="Color.Primary" Split />
                                                        <DropdownMenu>
                                                            <DropdownItem Clicked="@(()=>handleEditPlant(item))">Edit</DropdownItem>
                                                            <DropdownDivider />
                                                            <DropdownItem Clicked="@(()=>handalDelPlant(item))">Delete</DropdownItem>

                                                        </DropdownMenu>
                                                    </Dropdown>
                                                      
                                                    </Field>
                                                </p>
                                            </details>
                                        
                                        </div>
                                    </div>
                                </div>
                            }
                        </Div>
   }
      <Div Display="Display.None.Block.OnDesktop">
                    @if (PlantList != null)
                    {
                        <Table>
                    <TableHeader>

                                <TableRow>

                                    <TableHeaderCell>Plant Name</TableHeaderCell>
                                    <TableHeaderCell>Email</TableHeaderCell>
                                    <TableHeaderCell>City</TableHeaderCell>
                                    <TableHeaderCell>State</TableHeaderCell>
                                    <TableHeaderCell>Country</TableHeaderCell>
                                    <TableHeaderCell>Pin Code</TableHeaderCell>
                                    <TableHeaderCell>Operation</TableHeaderCell>
                                </TableRow>
                            </TableHeader>
                            <TableBody>
                                @foreach (var item in (PlantList).Where(a=>a.Status_F==0))
                                {
                                    <TableRowGroup Title="@item.Plant_Name">
                                        <TableRow>
                                            <TableRowCell>@item.Plant_Name</TableRowCell>
                                            <TableRowCell>@item.Email</TableRowCell>
                                            <TableRowCell>@item.City</TableRowCell>
                                            <TableRowCell>@item.State</TableRowCell>
                                            <TableRowCell>@item.Country</TableRowCell>
                                            <TableRowCell>@item.PinCode</TableRowCell>


                                            <TableRowCell>
                                                <Dropdown>
                                                    <Button Color="Color.Info">Action</Button>
                                                    <DropdownToggle Color="Color.Primary" Split />
                                                    <DropdownMenu>
                                                        <DropdownItem Clicked="@(()=>handleEditPlant(item))">Edit</DropdownItem>
                                                        <DropdownDivider />
                                                        <DropdownItem Clicked="@(()=>handalDelPlant(item))">Delete</DropdownItem>

                                                    </DropdownMenu>
                                                </Dropdown>
                                            </TableRowCell>

                                        </TableRow>

                                    </TableRowGroup>
                                }
                            </TableBody>
                        </Table>
                    }

                </Div>

    </div>
}


@code {

    IEnumerable<TblCompanyMaster> companies;
    TblPlantMaster tblPlant = new();
    string cmpId;

    [Parameter]
    public EventCallback<bool> mstDataChanged { get; set; }

    [Parameter]
    public RenderFragment ChildContent{ get; set; }

    IEnumerable<TblPlantMaster> PlantList;
    bool? DispDatas;
    bool? isDialogOpen;
    bool? isnew = true;
    TblPlantMaster? selectedplant;
    protected override async Task OnInitializedAsync()
    {
        companies = await httpservice.Get<List<TblCompanyMaster>>("CompanyMasters/ACT");
        tblPlant.Company_Id = cmpId;
        PlantList = (await httpservice.Get<List<TblPlantMaster>>("PlantMasters/ACT")).Where(a => (a.Company_Id == tblPlant.Company_Id));
        StateHasChanged();
    }
    async void submit()
    {
        if(isnew==true)
        {
            try
            {
                if (tblPlant.Company_Id != null && tblPlant.Plant_Name != "")
                {
                    tblPlant.Company_Id = companies.First(a => (a.ID.ToString() == cmpId)).ID.ToString();        
                    tblPlant.Created_By = "Admin";
                    var result = await httpservice.Post<string>("PlantMasters", tblPlant);

                    if (result != null)
                    {
                        await App.Current.MainPage.DisplayAlert("Message", result, "Ok");

                    }
                    else
                    {
                        await App.Current.MainPage.DisplayAlert("Message", "Error", "Ok");

                    }

                }

            }catch(Exception ex)
            {

            }

            HandleCancel();

            await OnInitializedAsync();
            tblPlant = new();
            selectedplant = new();
            StateHasChanged();
        }
        else
        {
            try
            {
                if (tblPlant.Company_Id != null && tblPlant.Plant_Name != "")
                {
                    tblPlant.Company_Id = companies.First(a => (a.ID.ToString() == cmpId)).ID.ToString();
                    tblPlant.Modified_By = "Admin";
                    tblPlant.Status_F = 0;
                    var result = await httpservice.Post<string>("PlantMasters/UPD", tblPlant);

                    if (result != null)
                    {
                        await App.Current.MainPage.DisplayAlert("Message", result, "Ok");

                    }
                    else
                    {
                        await App.Current.MainPage.DisplayAlert("Message", "Error", "Ok");

                    }

                }

            }
            catch (Exception ex)
            {

            }

            HandleCancel();

            await OnInitializedAsync();
            tblPlant = new();
            selectedplant = null;
            isnew = true;
            StateHasChanged();
        }
    }

    void handleDataSaved()
    {
        selectedplant = null;
        // DispDatas = null;

    }
    void HandleCancel()
    {
        selectedplant = null;
        tblPlant = new();
        // DispDatas = false;
        isDialogOpen = false;
        isnew = true;
    }
    void AddPlant()
    {
        selectedplant = new TblPlantMaster();
        isDialogOpen = true;
        selectedplant.Company_Id = cmpId;
        tblPlant.Company_Id = selectedplant.Company_Id;

    }
    void HandleAddplant()
    {
        selectedplant = null;
        isDialogOpen = null;

    }
    //void back()
    //{
    //    selectedplant = null;
    //    DispDatas = false;
    //}
    void handleEditPlant(TblPlantMaster item)
    {
        selectedplant = item;
        tblPlant = selectedplant;
        isDialogOpen = true;
        isnew = false;

    }
    async  void handalDelPlant(TblPlantMaster item)
    {
        item.Status_F = 1;
        var result = await httpservice.Post<string>("PlantMasters/UPD", item);

        if (result != null)
        {
            await App.Current.MainPage.DisplayAlert("Message", "Plant Deleted Successfully", "Ok");
        }
        else
        {

            await App.Current.MainPage.DisplayAlert("Message", "Error", "Ok");

        }
        isnew = true;
        StateHasChanged();
        
       // PlantList = (await httpservice.Get<List<TblPlantMaster>>("PlantMasters/ACT")).Where(a => (a.Company_Id == tblPlant.Company_Id));
    }

    async void handlePlant(string val)
    {
        tblPlant.Company_Id = val;
        PlantList = (await httpservice.Get<List<TblPlantMaster>>("PlantMasters/ACT")).Where(a => (a.Company_Id == tblPlant.Company_Id));
        cmpId = tblPlant.Company_Id;
        StateHasChanged();
    }
}
