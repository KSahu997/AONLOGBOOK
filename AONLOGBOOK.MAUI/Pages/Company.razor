@page "/Company"
@using System.ComponentModel.DataAnnotations
@using AONLOGBOOK.SHARED.Models;
@inject IHttpService httpservice;

<style>
   
    body{
        background: #F6F5F5;
    }
    

    details {
        margin-bottom: 18px;
       
    }

        details summary {
            font-size: 13px;
           
            cursor:pointer;
        }

        details  p {
            font-size: 13px;
            line-height: 24px;
            margin-top: 10px;
            color: #545d7a;
        }

    ::marker {
        content:close-quote;
        unicode-bidi: isolate;
        font-variant-numeric: tabular-nums;
        text-transform: none;
        text-indent: 0px !important;
        text-align: start !important;
        text-align-last: start !important;
    }

    
   
</style>

@if (isDialogOpen== true)
{
    @if(selectedcompany!= null)
    {
         <CModal company="@selectedcompany" title=" Create New Company" mstDatasChanged="@HandleAddcompany">
                <ChildContent1>

                    <EditForm Model="@tblCompanyMaster" OnValidSubmit="submit">
                        <DataAnnotationsValidator />
                   <Validations Mode="ValidationMode.Auto" Model="@tblCompanyMaster">
                        <Fields>
                            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                <FieldLabel>Company Name</FieldLabel>
                                <TextEdit @bind-Text="tblCompanyMaster.Company_Name" Role="TextRole.Text"></TextEdit>
                            </Field>
                            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                <FieldLabel>Email</FieldLabel>
                                <TextEdit @bind-Text="tblCompanyMaster.Email" Role="TextRole.Email"></TextEdit>
                            </Field>
                            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                <FieldLabel>Mobile Number</FieldLabel>
                                <TextEdit @bind-Text="tblCompanyMaster.Phone_no" Role="TextRole.Text"></TextEdit>
                            </Field>
                        </Fields>
                        <Fields>
                            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                <FieldLabel>Address</FieldLabel>
                                <TextEdit @bind-Text="tblCompanyMaster.Address" Role="TextRole.Text"></TextEdit>
                            </Field>
                            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                <FieldLabel>Country</FieldLabel>
                                <TextEdit @bind-Text="tblCompanyMaster.Country" Role="TextRole.Text"></TextEdit>
                            </Field>
                            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                <FieldLabel>State</FieldLabel>
                                <TextEdit @bind-Text="tblCompanyMaster.State" Role="TextRole.Text"></TextEdit>
                            </Field>
                        </Fields>
                        <Fields>
                            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                <FieldLabel>City</FieldLabel>
                                <TextEdit @bind-Text="tblCompanyMaster.City" Role="TextRole.Text"></TextEdit>
                            </Field>
                            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                <FieldLabel>Postal Code</FieldLabel>
                                <NumericEdit @bind-Value="tblCompanyMaster.PinCode"></NumericEdit>
                            </Field>
                            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                <FieldLabel>GSTIN</FieldLabel>
                                <TextEdit @bind-Text="tblCompanyMaster.GST_no" Role="TextRole.Text"></TextEdit>
                            </Field>
                        </Fields>
                        <Fields>
                            <Field ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnMobile">
                                <FieldLabel>Company Logo</FieldLabel>
                                <FileEdit Changed="@Onchanged" />
                            </Field>
                        </Fields>
                        <Fields>
                            <Field Flex="Flex.JustifyContent.Center">
                                <Button Type="ButtonType.Submit" Color="Color.Primary" class="m-2">Submit</Button>
                                <Button Type="ButtonType.Reset" Color="Color.Info" class="m-2">Reset</Button>
                                <Button Type="ButtonType.Button" Color="Color.Warning" class="m-2" Clicked="@HandleCanceled">Cancel</Button>
                            </Field>
                        </Fields>
                      
                    </Validations>
                      
                    </EditForm>
                </ChildContent1>
            </CModal>
      
       
}
   
    
}
else
{


<div class="Container">
       <div class="row m-3" >
         <Heading Size="HeadingSize.Is4" Flex="Flex.JustifyContent.Center.OnDesktop">COMPANY(s)</Heading>
            <div class="col-md-12">
                <Button class="btn" style="margin:10px;" Color="Color.Info" @onclick="@Addcompany"><BarIcon IconName="IconName.Add" ></BarIcon>
                    Add
                </Button>
  
                          @if (companies != null)
                            {
                                <Div Display="Display.Block.None.OnDesktop" >
                                @foreach (var item in companies.Where(a => (a.Status_F == 0)))
                                {
                                 <div id="accordion">
                                        <div class="faq-container">
                                             <div class="card w-100 mb-2" style="border-top: 1px solid #FF6E31;">
                                                
                                        <details class="d-flex m-2">
                                        <summary><i class="fa fa-city p-2" style="color:#243763;font-size:18px;"></i><Span style="font-size:16px;">@item.Company_Name</Span></summary>
                                        <p style="margin-left:10px;">
                                            <ListGroup>
                                                <ListGroupItem><b>Email</b>   @item.Email</ListGroupItem>
                                                <ListGroupItem> <b>Mobile Number</b>  @item.Phone_no</ListGroupItem>
                                                <ListGroupItem><b>GSTIN</b>  @item.GST_no</ListGroupItem>
                                                <ListGroupItem> <b>City</b>  @item.City</ListGroupItem>
                                                <ListGroupItem><b>Country</b>  @item.Country</ListGroupItem>
                                                <ListGroupItem><b>State</b>  @item.State</ListGroupItem>
                                                <ListGroupItem><b>Postal Code</b>  @item.PinCode</ListGroupItem>
                                            </ListGroup>
                                            <Field>
                                                    <Dropdown>
                                                        <Button Color="Color.Info">Action</Button>
                                                        <DropdownToggle Color="Color.Primary" Split />
                                                        <DropdownMenu>
                                                            <DropdownItem Clicked="@(()=>handalEditcompany(item))">Edit</DropdownItem>
                                                            <DropdownDivider />
                                                            <DropdownItem Clicked="@(()=>handalDelCompany(item))">Delete</DropdownItem>
                                                        </DropdownMenu>
                                                    </Dropdown>
                                            </Field>
                                         </p>
                                        </details>
                                              </div>
                                        </div>
                                 </div>                                        
                                }
                                </Div>
                            }

                           <Div Display="Display.None.Block.OnDesktop">
                                @if (companies != null)
                                {
                                <Table>
                            <TableHeader Style="background-image: linear-gradient(181deg, #3e52af, transparent);">

                                <TableRow>
                                   
                                        <TableHeaderCell>Company_Name</TableHeaderCell>
                                        <TableHeaderCell>Email</TableHeaderCell>
                                        <TableHeaderCell>Phone_no</TableHeaderCell>
                                        <TableHeaderCell>GST_no</TableHeaderCell>
                                        <TableHeaderCell>City</TableHeaderCell>
                                        <TableHeaderCell>State</TableHeaderCell>
                                        <TableHeaderCell>Country</TableHeaderCell>
                                        <TableHeaderCell>Operation</TableHeaderCell>
                                </TableRow>
                            </TableHeader>
                            <TableBody>
                                @foreach (var item in companies.Where(a=>(a.Status_F==0)))
                                {
                                    <TableRowGroup Title="@item.Company_Name">
                                           <TableRow>
                                               <TableRowCell>@item.Company_Name</TableRowCell>
                                               <TableRowCell>@item.Email</TableRowCell>
                                               <TableRowCell>@item.Phone_no</TableRowCell>
                                               <TableRowCell>@item.GST_no</TableRowCell>
                                               <TableRowCell>@item.City</TableRowCell>
                                               <TableRowCell>@item.State</TableRowCell>
                                               <TableRowCell>@item.Country</TableRowCell>
                                                    
                                                
                                                <TableRowCell>
                                                    <Dropdown>
                                                        <Button Color="Color.Info">Action</Button>
                                                        <DropdownToggle Color="Color.Primary" Split />
                                                        <DropdownMenu>
                                                        <DropdownItem Clicked="@(()=>handalEditcompany(item))">Edit</DropdownItem>
                                                            <DropdownDivider />
                                                            <DropdownItem Clicked="@(()=>handalDelCompany(item))">Delete</DropdownItem>
                                                            
                                                        </DropdownMenu>
                                                    </Dropdown>
                                                </TableRowCell>

                                            </TableRow>
                                        
                                    </TableRowGroup>
                                }
                            </TableBody>
                        </Table>
                                }

                          </Div>
                      
        </div>
   </div>
</div>
}
@code {
    bool collapse1Visible = true;
    TblCompanyMaster tblCompanyMaster = new();
    IEnumerable<TblCompanyMaster> companies;
    TblCompanyMaster? selectedcompany;
    TblPlantMaster selectedplant;
    bool? DispData;
    bool? isnew = true;
    bool? isDialogOpen;
    async void submit()
    {
        if (isnew == true)
        {
            try
            {
                tblCompanyMaster.Created_By = "Admin";
                var result = await httpservice.Post<string>("CompanyMasters", tblCompanyMaster);

                if (result != null)
                {
                    await App.Current.MainPage.DisplayAlert("Message", result, "Ok");
                }
                else
                {

                    await App.Current.MainPage.DisplayAlert("Message", "Error", "Ok");

                }

                StateHasChanged();

            }
            catch (Exception ex)
            {
                if (tblCompanyMaster != null && tblCompanyMaster.Company_Name == tblCompanyMaster.Company_Name || tblCompanyMaster.Company_Name == "")
                {
                    await App.Current.MainPage.DisplayAlert("Message", "Invalid Company name", "Ok");
                }
                else

                    await App.Current.MainPage.DisplayAlert("Message", ex.Message, "Ok");
            }
            HandleCanceled();
            StateHasChanged();
            tblCompanyMaster = new();
            await OnInitializedAsync();
        }
        else
        {
            tblCompanyMaster.Status_F = 0;
            var editdata = await httpservice.Post<string>("companymasters/UPD", tblCompanyMaster);
            if (editdata != null)
            {
                await App.Current.MainPage.DisplayAlert("message", editdata, "ok");
            }
            else
            {

                await App.Current.MainPage.DisplayAlert("message", "error", "ok");

            }
            HandleCanceled();
            StateHasChanged();
            tblCompanyMaster = new();
            await OnInitializedAsync();
        }

    }

    protected override async Task OnInitializedAsync()
    {
        companies = await httpservice.Get<List<TblCompanyMaster>>("CompanyMasters/ACT");
        StateHasChanged();
    }

    public async Task HandleDataSaved()
    {
        selectedcompany = null;
        DispData = null;

    }
    void HandleCancel()
    {
        selectedplant = null;
        DispData = false;

    }
    void Addcompany()
    {
        selectedcompany = new TblCompanyMaster();
        isDialogOpen = true;

    }
    void HandleAddcompany()
    {
        selectedcompany = null;
        isDialogOpen = null;


    }
    void HandleCanceled()
    {
        selectedcompany = null;
        tblCompanyMaster = new();
        isDialogOpen = false;

    }
    void back()
    {
        selectedcompany=null;
        DispData = null;
    }
    void handalEditcompany(TblCompanyMaster item)
    {
        selectedcompany = item;
        tblCompanyMaster = selectedcompany;
        isDialogOpen = true;
        isnew = false;
    }
    void Onchanged()
    {

    }
    async void handalDelCompany(TblCompanyMaster item){

        item.Status_F = 1;
        var result = await httpservice.Post<string>("CompanyMasters/UPD", item);

        if (result != null)
        {
            await App.Current.MainPage.DisplayAlert("Message", result, "Ok");
        }
        else
        {

            await App.Current.MainPage.DisplayAlert("Message", "Error", "Ok");

        }

        StateHasChanged();
    }
    //async void handleAddnewPlant(TblCompanyMaster item)
    //{
    //    selectedcompany = item;
    //    DispData = true;


    //}
}